---
name: aci-cf-controller

templates:
   ctl.erb: bin/ctl
   health_check.erb: bin/health_check
   controller.conf.template: config/controller.conf
   cf.conf.template: config/cf.conf
   apic_user.key.erb: config/certs/apic/user.key
   uaa_ca.crt.erb: config/certs/uaa/ca.crt
   controller_ca.crt.erb: config/certs/controller/ca.crt
   controller_server.crt.erb: config/certs/controller/server.crt
   controller_server.key.erb: config/certs/controller/server.key
   bbs_ca.crt.erb: config/certs/bbs/ca.crt
   bbs_client.crt.erb: config/certs/bbs/client.crt
   bbs_client.key.erb: config/certs/bbs/client.key
   network_policy_ca.crt.erb: config/certs/network_policy/ca.crt
   network_policy_client.crt.erb: config/certs/network_policy/client.crt
   network_policy_client.key.erb: config/certs/network_policy/client.key
   locket_ca.crt.erb: config/certs/locket/ca.crt
   locket_client.crt.erb: config/certs/locket/client.crt
   locket_client.key.erb: config/certs/locket/client.key

packages:
- aci-cf-controller
- apic-host-report

properties:
   api.port:
      description: "Port at which API requests are handled"
      default: 9990
   api.path_prefix:
      description: "Prefix of HTTP path at which API requests are expected"
      default: "/networking-aci"
   apic.hosts:
      description: "Locations of APIC controllers"
      default: []
   apic.username:
      description: "Username for connecting to APIC"
      default: "admin"
   apic.user_private_key:
      description: "PEM encoded private key of user for connecting to APIC"
   apic.password:
      description: "Password for connecting to APIC"
   apic.vmm_policy:
      description: "APIC VMM Policy"
      default: "CloudFoundry"
   apic.vmm_domain:
      description: "APIC VMM domain to use"
      default: "cf"
   apic.vmm_controller:
      description: "APIC VMM controller to use"
      default: "cf-cluster"
   apic.name_prefix:
      description: "String to prefix to APIC objct names"
      default: "cf"
   apic.policy_tenant:
      description: "APIC Tenant to create APIC objects in"
      default: "cf"
   apic.policy_default_epg:
      description: "Default APIC endpoint-group to use for apps"
      default: "default|cf-app-default"
   apic.policy_vrf_tenant:
      description: "Tenant of VRF in APIC to use"
      default: "common"
   apic.policy_vrf:
      description: "VRF in APIC to use"
      default: "cf"
   apic.l3out:
      description: "L3Out in APIC to use for external connectivity"
      default: "l3out"
   apic.l3_ext_networks:
      description: "External networks in APIC to use for app external IP"
      default: ["ext-net"]
   apic.service_phys_domain:
      description: "Physical domain used for service device clusters"
      default: "phys"
   apic.default_app_profile:
      description: "Application profile in APIC to use for isolation segments etc"
      default: "default"
   apic.service_encap:
      description: "Encap used in APIC for app external-ip device clusters"
   network.subnet:
      description: "Subnet CIDR for container network in the form <gateway-address>/<prefix-length>"
      default: "10.255.0.1/16"
   network.ip_pool:
      description: "IP address pool to use for containers"
      default:
        - start: 10.255.0.2
          end: 10.255.255.255
   network.app_vip_pool:
      description: "IP address pool to use for app virtual IPs"
      default:
        - start: 10.254.0.2
          end: 10.254.255.255
   network.app_vip_subnet:
      description: "Subnet CIDRs that cover all app virtual IP pools"
      default: ["10.254.0.0/16"]
   network.app_external_dynamic_ip_pool:
      description: "IP address pool to use for dynamically assigned app external IPs"
   network.app_external_static_ip_pool:
      description: "IP address pool to use for statically assigned app external IPs"
   network.node_service_ip_pool:
      description: "IP address pool to use for cells to support app external IP"
      default:
        - start: 10.0.0.2
          end: 10.0.0.255
   network.node_service_subnets:
      description: "Subnet gateway/CIDRs that cover all node service IP pools"
      default: ["10.0.0.1/24"]
   network.cf_net_ip_address:
      description: "IP address of the interface that will be used for providing CloudFoundry legacy networking"
      default: "169.254.169.254"
   controller.ca_cert:
      description: "PEM-encoded CA certificate for controller"
   controller.server_cert:
      description: "PEM-encoded server certificate for controller"
   controller.server_key:
      description: "PEM-encoded server key for controller"
   controller.key_value_port:
      description: "Port at which key-value service is available"
      default: 9902
   bbs.ca_cert:
      description: "PEM-encoded CA certificate for BBS"
   bbs.client_cert:
      description: "PEM-encoded client certificate for BBS"
   bbs.client_key:
      description: "PEM-encoded client key for BBS"
   cc_api.url:
      description: "URL of CloudController API endpoint"
   cc_api.username:
      description: "Username to use for connecting to CloudController"
      default: "admin"
   cc_api.password:
      description: "Password to use for connecting to CloudController"
   uaa.url:
      description: "URL of CloudFoundry UAA API endpoint"
   uaa.ca_cert:
      description: "PEM-encoded CA certificate for UAA"
   uaa.client_name:
      description: "Name of the UAA client to use"
   uaa.client_secret:
      description: "Client secret to use when connecting to UAA"
   network_policy.ca_cert:
      description: "PEM-encoded CA certificate for Network Policy"
   network_policy.client_cert:
      description: "PEM-encoded client certificate for Network Policy"
   network_policy.client_key:
      description: "PEM-encoded client key for Network Policy"
   network_policy.poll_interval:
      description: "Polling interval, in seconds, for Network Policy changes"
      default: 0
   database.type:
      description: "Type of database. Supported values: mysql."
   database.username:
      description: "Username for database connection."
   database.password:
      description: "Password for database connection."
   database.host:
      description: "Host (IP or DNS name) for database server."
   database.port:
      description: "Port for database server."
   database.name:
      description: "Name of logical database to use."
   locket.ca_cert:
      description: "PEM-encoded CA certificate for Locket."
   locket.client_cert:
      description: "PEM-encoded client certificate for Locket."
   locket.client_key:
      description: "PEM-encoded client key for Locket."
